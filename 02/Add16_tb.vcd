$date
	Sun Nov  3 00:17:33 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module Add16_tb $end
$var wire 16 ! out [15:0] $end
$var reg 16 " a [15:0] $end
$var reg 16 # b [15:0] $end
$var integer 32 $ file [31:0] $end
$scope module dut $end
$var wire 16 % a [15:0] $end
$var wire 16 & b [15:0] $end
$var wire 16 ' out [15:0] $end
$var wire 16 ( carry [15:0] $end
$scope module fulladder1 $end
$var wire 1 ) a $end
$var wire 1 * b $end
$var wire 1 + carry_in $end
$var wire 1 , carry_out $end
$var wire 1 - sum1 $end
$var wire 1 . sum $end
$var wire 2 / carry [1:0] $end
$scope module halfadder1 $end
$var wire 1 ) a $end
$var wire 1 * b $end
$var wire 1 0 carry $end
$var wire 1 - sum $end
$upscope $end
$scope module halfadder2 $end
$var wire 1 - a $end
$var wire 1 + b $end
$var wire 1 1 carry $end
$var wire 1 . sum $end
$upscope $end
$upscope $end
$scope module fulladder10 $end
$var wire 1 2 a $end
$var wire 1 3 b $end
$var wire 1 4 carry_in $end
$var wire 1 5 carry_out $end
$var wire 1 6 sum1 $end
$var wire 1 7 sum $end
$var wire 2 8 carry [1:0] $end
$scope module halfadder1 $end
$var wire 1 2 a $end
$var wire 1 3 b $end
$var wire 1 9 carry $end
$var wire 1 6 sum $end
$upscope $end
$scope module halfadder2 $end
$var wire 1 6 a $end
$var wire 1 4 b $end
$var wire 1 : carry $end
$var wire 1 7 sum $end
$upscope $end
$upscope $end
$scope module fulladder11 $end
$var wire 1 ; a $end
$var wire 1 < b $end
$var wire 1 = carry_in $end
$var wire 1 > carry_out $end
$var wire 1 ? sum1 $end
$var wire 1 @ sum $end
$var wire 2 A carry [1:0] $end
$scope module halfadder1 $end
$var wire 1 ; a $end
$var wire 1 < b $end
$var wire 1 B carry $end
$var wire 1 ? sum $end
$upscope $end
$scope module halfadder2 $end
$var wire 1 ? a $end
$var wire 1 = b $end
$var wire 1 C carry $end
$var wire 1 @ sum $end
$upscope $end
$upscope $end
$scope module fulladder12 $end
$var wire 1 D a $end
$var wire 1 E b $end
$var wire 1 F carry_in $end
$var wire 1 G carry_out $end
$var wire 1 H sum1 $end
$var wire 1 I sum $end
$var wire 2 J carry [1:0] $end
$scope module halfadder1 $end
$var wire 1 D a $end
$var wire 1 E b $end
$var wire 1 K carry $end
$var wire 1 H sum $end
$upscope $end
$scope module halfadder2 $end
$var wire 1 H a $end
$var wire 1 F b $end
$var wire 1 L carry $end
$var wire 1 I sum $end
$upscope $end
$upscope $end
$scope module fulladder13 $end
$var wire 1 M a $end
$var wire 1 N b $end
$var wire 1 O carry_in $end
$var wire 1 P carry_out $end
$var wire 1 Q sum1 $end
$var wire 1 R sum $end
$var wire 2 S carry [1:0] $end
$scope module halfadder1 $end
$var wire 1 M a $end
$var wire 1 N b $end
$var wire 1 T carry $end
$var wire 1 Q sum $end
$upscope $end
$scope module halfadder2 $end
$var wire 1 Q a $end
$var wire 1 O b $end
$var wire 1 U carry $end
$var wire 1 R sum $end
$upscope $end
$upscope $end
$scope module fulladder14 $end
$var wire 1 V a $end
$var wire 1 W b $end
$var wire 1 X carry_in $end
$var wire 1 Y carry_out $end
$var wire 1 Z sum1 $end
$var wire 1 [ sum $end
$var wire 2 \ carry [1:0] $end
$scope module halfadder1 $end
$var wire 1 V a $end
$var wire 1 W b $end
$var wire 1 ] carry $end
$var wire 1 Z sum $end
$upscope $end
$scope module halfadder2 $end
$var wire 1 Z a $end
$var wire 1 X b $end
$var wire 1 ^ carry $end
$var wire 1 [ sum $end
$upscope $end
$upscope $end
$scope module fulladder15 $end
$var wire 1 _ a $end
$var wire 1 ` b $end
$var wire 1 a carry_in $end
$var wire 1 b carry_out $end
$var wire 1 c sum1 $end
$var wire 1 d sum $end
$var wire 2 e carry [1:0] $end
$scope module halfadder1 $end
$var wire 1 _ a $end
$var wire 1 ` b $end
$var wire 1 f carry $end
$var wire 1 c sum $end
$upscope $end
$scope module halfadder2 $end
$var wire 1 c a $end
$var wire 1 a b $end
$var wire 1 g carry $end
$var wire 1 d sum $end
$upscope $end
$upscope $end
$scope module fulladder2 $end
$var wire 1 h a $end
$var wire 1 i b $end
$var wire 1 j carry_in $end
$var wire 1 k carry_out $end
$var wire 1 l sum1 $end
$var wire 1 m sum $end
$var wire 2 n carry [1:0] $end
$scope module halfadder1 $end
$var wire 1 h a $end
$var wire 1 i b $end
$var wire 1 o carry $end
$var wire 1 l sum $end
$upscope $end
$scope module halfadder2 $end
$var wire 1 l a $end
$var wire 1 j b $end
$var wire 1 p carry $end
$var wire 1 m sum $end
$upscope $end
$upscope $end
$scope module fulladder3 $end
$var wire 1 q a $end
$var wire 1 r b $end
$var wire 1 s carry_in $end
$var wire 1 t carry_out $end
$var wire 1 u sum1 $end
$var wire 1 v sum $end
$var wire 2 w carry [1:0] $end
$scope module halfadder1 $end
$var wire 1 q a $end
$var wire 1 r b $end
$var wire 1 x carry $end
$var wire 1 u sum $end
$upscope $end
$scope module halfadder2 $end
$var wire 1 u a $end
$var wire 1 s b $end
$var wire 1 y carry $end
$var wire 1 v sum $end
$upscope $end
$upscope $end
$scope module fulladder4 $end
$var wire 1 z a $end
$var wire 1 { b $end
$var wire 1 | carry_in $end
$var wire 1 } carry_out $end
$var wire 1 ~ sum1 $end
$var wire 1 !" sum $end
$var wire 2 "" carry [1:0] $end
$scope module halfadder1 $end
$var wire 1 z a $end
$var wire 1 { b $end
$var wire 1 #" carry $end
$var wire 1 ~ sum $end
$upscope $end
$scope module halfadder2 $end
$var wire 1 ~ a $end
$var wire 1 | b $end
$var wire 1 $" carry $end
$var wire 1 !" sum $end
$upscope $end
$upscope $end
$scope module fulladder5 $end
$var wire 1 %" a $end
$var wire 1 &" b $end
$var wire 1 '" carry_in $end
$var wire 1 (" carry_out $end
$var wire 1 )" sum1 $end
$var wire 1 *" sum $end
$var wire 2 +" carry [1:0] $end
$scope module halfadder1 $end
$var wire 1 %" a $end
$var wire 1 &" b $end
$var wire 1 ," carry $end
$var wire 1 )" sum $end
$upscope $end
$scope module halfadder2 $end
$var wire 1 )" a $end
$var wire 1 '" b $end
$var wire 1 -" carry $end
$var wire 1 *" sum $end
$upscope $end
$upscope $end
$scope module fulladder6 $end
$var wire 1 ." a $end
$var wire 1 /" b $end
$var wire 1 0" carry_in $end
$var wire 1 1" carry_out $end
$var wire 1 2" sum1 $end
$var wire 1 3" sum $end
$var wire 2 4" carry [1:0] $end
$scope module halfadder1 $end
$var wire 1 ." a $end
$var wire 1 /" b $end
$var wire 1 5" carry $end
$var wire 1 2" sum $end
$upscope $end
$scope module halfadder2 $end
$var wire 1 2" a $end
$var wire 1 0" b $end
$var wire 1 6" carry $end
$var wire 1 3" sum $end
$upscope $end
$upscope $end
$scope module fulladder7 $end
$var wire 1 7" a $end
$var wire 1 8" b $end
$var wire 1 9" carry_in $end
$var wire 1 :" carry_out $end
$var wire 1 ;" sum1 $end
$var wire 1 <" sum $end
$var wire 2 =" carry [1:0] $end
$scope module halfadder1 $end
$var wire 1 7" a $end
$var wire 1 8" b $end
$var wire 1 >" carry $end
$var wire 1 ;" sum $end
$upscope $end
$scope module halfadder2 $end
$var wire 1 ;" a $end
$var wire 1 9" b $end
$var wire 1 ?" carry $end
$var wire 1 <" sum $end
$upscope $end
$upscope $end
$scope module fulladder8 $end
$var wire 1 @" a $end
$var wire 1 A" b $end
$var wire 1 B" carry_in $end
$var wire 1 C" carry_out $end
$var wire 1 D" sum1 $end
$var wire 1 E" sum $end
$var wire 2 F" carry [1:0] $end
$scope module halfadder1 $end
$var wire 1 @" a $end
$var wire 1 A" b $end
$var wire 1 G" carry $end
$var wire 1 D" sum $end
$upscope $end
$scope module halfadder2 $end
$var wire 1 D" a $end
$var wire 1 B" b $end
$var wire 1 H" carry $end
$var wire 1 E" sum $end
$upscope $end
$upscope $end
$scope module fulladder9 $end
$var wire 1 I" a $end
$var wire 1 J" b $end
$var wire 1 K" carry_in $end
$var wire 1 L" carry_out $end
$var wire 1 M" sum1 $end
$var wire 1 N" sum $end
$var wire 2 O" carry [1:0] $end
$scope module halfadder1 $end
$var wire 1 I" a $end
$var wire 1 J" b $end
$var wire 1 P" carry $end
$var wire 1 M" sum $end
$upscope $end
$scope module halfadder2 $end
$var wire 1 M" a $end
$var wire 1 K" b $end
$var wire 1 Q" carry $end
$var wire 1 N" sum $end
$upscope $end
$upscope $end
$scope module halfadder1 $end
$var wire 1 R" a $end
$var wire 1 S" b $end
$var wire 1 T" carry $end
$var wire 1 U" sum $end
$upscope $end
$upscope $end
$scope begin $ivl_for_loop0 $end
$var integer 32 V" i [31:0] $end
$upscope $end
$scope task display $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
b0 V"
0U"
0T"
0S"
0R"
0Q"
0P"
b0 O"
0N"
0M"
0L"
0K"
0J"
0I"
0H"
0G"
b0 F"
0E"
0D"
0C"
0B"
0A"
0@"
0?"
0>"
b0 ="
0<"
0;"
0:"
09"
08"
07"
06"
05"
b0 4"
03"
02"
01"
00"
0/"
0."
0-"
0,"
b0 +"
0*"
0)"
0("
0'"
0&"
0%"
0$"
0#"
b0 ""
0!"
0~
0}
0|
0{
0z
0y
0x
b0 w
0v
0u
0t
0s
0r
0q
0p
0o
b0 n
0m
0l
0k
0j
0i
0h
0g
0f
b0 e
0d
0c
0b
0a
0`
0_
0^
0]
b0 \
0[
0Z
0Y
0X
0W
0V
0U
0T
b0 S
0R
0Q
0P
0O
0N
0M
0L
0K
b0 J
0I
0H
0G
0F
0E
0D
0C
0B
b0 A
0@
0?
0>
0=
0<
0;
0:
09
b0 8
07
06
05
04
03
02
01
00
b0 /
0.
0-
0,
0+
0*
0)
b0 (
b0 '
b0 &
b0 %
b10000000000000000000000000000011 $
b0 #
b0 "
b0 !
$end
#1
1.
1m
1v
1!"
1*"
13"
1<"
1E"
1N"
17
1@
1I
1R
1[
1d
b1111111111111111 !
b1111111111111111 '
1U"
1-
1l
1u
1~
1)"
12"
1;"
1D"
1M"
16
1?
1H
1Q
1Z
1c
1S"
1*
1i
1r
1{
1&"
1/"
18"
1A"
1J"
13
1<
1E
1N
1W
1`
b1111111111111111 #
b1111111111111111 &
b1 V"
#2
1j
1s
1|
1'"
10"
19"
1B"
1K"
14
1=
1F
1O
1X
1a
1,
1k
1t
1}
1("
11"
1:"
1C"
1L"
15
1>
1G
1P
1Y
1b
1+
1.
1m
1v
1!"
1*"
13"
1<"
1E"
1N"
17
1@
1I
1R
1[
1d
b1111111111111110 !
b1111111111111110 '
0U"
b1111111111111111 (
1T"
0-
b1 /
10
0l
b1 n
1o
0u
b1 w
1x
0~
b1 ""
1#"
0)"
b1 +"
1,"
02"
b1 4"
15"
0;"
b1 ="
1>"
0D"
b1 F"
1G"
0M"
b1 O"
1P"
06
b1 8
19
0?
b1 A
1B
0H
b1 J
1K
0Q
b1 S
1T
0Z
b1 \
1]
0c
b1 e
1f
1R"
1)
1h
1q
1z
1%"
1."
17"
1@"
1I"
12
1;
1D
1M
1V
1_
b1111111111111111 "
b1111111111111111 %
b10 V"
#3
0j
0|
00"
0B"
04
0F
0X
0s
0'"
09"
0K"
0=
0O
0a
0,
0t
0("
0:"
0L"
0>
0P
0b
0k
0}
01"
0C"
05
0G
0Y
1v
0y
1*"
0-"
1<"
0?"
1N"
0Q"
1@
0C
1R
0U
1d
0g
0+
1m
0p
1!"
0$"
13"
06"
1E"
0H"
17
0:
1I
0L
1[
0^
1-
b0 /
00
1u
b0 w
0x
1)"
b0 +"
0,"
1;"
b0 ="
0>"
1M"
b0 O"
0P"
1?
b0 A
0B
1Q
b0 S
0T
1c
b0 e
0f
b1111111111111111 !
b1111111111111111 '
1U"
b0 (
0T"
1l
b0 n
0o
1~
b0 ""
0#"
12"
b0 4"
05"
1D"
b0 F"
0G"
16
b0 8
09
1H
b0 J
0K
1Z
b0 \
0]
0*
0r
0&"
08"
0J"
0<
0N
0`
0R"
0h
0z
0."
0@"
02
0D
0V
b101010101010101 #
b101010101010101 &
b1010101010101010 "
b1010101010101010 %
b11 V"
#4
14
1X
1L"
1P
0N"
b10 O"
1Q"
0R
b10 S
1U
1K"
1O
1C"
1G
0E"
b10 F"
1H"
0I
b10 J
1L
1B"
1F
19"
1=
1:"
1>
11"
b11111111000000 (
15
0m
1<"
1@
1[
0v
03"
17
b100110010110011 !
b100110010110011 '
0d
0l
0;"
b1 ="
1>"
0?
b1 A
1B
0Z
0u
02"
b1 4"
15"
06
b1 8
19
0c
0S"
0i
1&"
18"
1J"
1<
0E
0W
1R"
0q
0%"
1."
0I"
12
1D
0_
b111111110000 #
b111111110000 &
b11110011000011 "
b11110011000011 %
b100 V"
#5
07
04
0L"
1N"
b0 O"
0Q"
0[
0K"
1v
16"
1<"
0X
0C"
1s
1'"
10"
19"
0B"
0=
0F
0P
1k
1}
1("
11"
0:"
05
b1000001110100 (
0>
0E"
b0 F"
0H"
0I
0L
1d
0!"
1*"
03"
1@
0C
1R
b0 S
0U
0D"
0H
b1 J
1K
1c
b1010101010101010 !
b1010101010101010 '
0U"
b1 n
1o
0~
b1 ""
1#"
0)"
b1 +"
1,"
12"
b10 4"
05"
b0 ="
0>"
b0 8
09
1?
b0 A
0B
0Q
1*
1i
08"
0A"
0J"
03
1E
1`
0R"
0)
1h
1z
1%"
0."
07"
1I"
02
0;
0M
b1001100001110110 #
b1001100001110110 &
b1001000110100 "
b1001000110100 %
b101 V"
#6
b110 V"
